{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\fullstack\\\\Front-end\\\\ReactPractice\\\\nextjsBigProject\\\\pages\\\\index.js\",\n    _this = this;\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\n// if we use import which we use in getstaticprops or path or serversideprops then it will not the part for client side bundle\n// const Dummy_data = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetup\",\n//     image: \"https://cdn.britannica.com/93/94493-050-35524FED/Toronto.jpg\",\n//     address: \"Some address 5, 12345 smart city\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetup\",\n//     image: \"https://cdn.britannica.com/93/94493-050-35524FED/Toronto.jpg\",\n//     address: \"Some address 10, 12345 smart city\",\n//   },\n// ];\nvar Homepage = function Homepage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, _this);\n}; //we will use this function only with pages and it used for static data generation for\n//pre-rendering process\n//it will run for every request\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: Dummy_data,\n//     },\n//   };\n// }\n//it will fetch data during build time\n//and re validate the page after some time\n\n\n_c = Homepage;\nexport var __N_SSG = true;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["D:/fullstack/Front-end/ReactPractice/nextjsBigProject/pages/index.js"],"names":["MeetupList","Homepage","props","meetups"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;;AACuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAhBMF,Q;;AAuCN,eAAeA,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\"; // if we use import which we use in getstaticprops or path or serversideprops then it will not the part for client side bundle\r\n// const Dummy_data = [\r\n//   {\r\n//     id: \"m1\",\r\n//     title: \"A First Meetup\",\r\n//     image: \"https://cdn.britannica.com/93/94493-050-35524FED/Toronto.jpg\",\r\n//     address: \"Some address 5, 12345 smart city\",\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     title: \"A Second Meetup\",\r\n//     image: \"https://cdn.britannica.com/93/94493-050-35524FED/Toronto.jpg\",\r\n//     address: \"Some address 10, 12345 smart city\",\r\n//   },\r\n// ];\r\nconst Homepage = (props) => {\r\n  return <MeetupList meetups={props.meetups} />;\r\n};\r\n//we will use this function only with pages and it used for static data generation for\r\n//pre-rendering process\r\n//it will run for every request\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n//   return {\r\n//     props: {\r\n//       meetups: Dummy_data,\r\n//     },\r\n//   };\r\n// }\r\n//it will fetch data during build time\r\n//and re validate the page after some time\r\nexport async function getStaticProps() {\r\n  //from API or file system\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Sagar_1997:sagar123@cluster0.rblqo.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  //collection is just like table and document is like single row\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray(); //it will return all the documents from collection\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meet) => ({\r\n        title: meet.title,\r\n        address: meet.address,\r\n        image: meet.image,\r\n        id: meet._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 60,\r\n  };\r\n}\r\nexport default Homepage;\r\n"]},"metadata":{},"sourceType":"module"}