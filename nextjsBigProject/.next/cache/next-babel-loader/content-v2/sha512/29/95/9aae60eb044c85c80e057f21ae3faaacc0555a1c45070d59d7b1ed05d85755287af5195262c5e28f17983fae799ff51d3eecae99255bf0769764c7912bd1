{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\fullstack\\\\Front-end\\\\ReactPractice\\\\nextjsBigProject\\\\pages\\\\index.js\";\nimport Head from \"next/head\"; //this is use for add element in head tag\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\"; // if we use import which we use in getstaticprops or path or serversideprops then it will not the part for client side bundle\n\nimport { Fragment } from \"react\"; // const Dummy_data = [\n//   {\n//     id: \"m1\",\n//     title: \"A First Meetup\",\n//     image: \"https://cdn.britannica.com/93/94493-050-35524FED/Toronto.jpg\",\n//     address: \"Some address 5, 12345 smart city\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A Second Meetup\",\n//     image: \"https://cdn.britannica.com/93/94493-050-35524FED/Toronto.jpg\",\n//     address: \"Some address 10, 12345 smart city\",\n//   },\n// ];\n\nconst Homepage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"MeetUps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"List of meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}; //we will use this function only with pages and it used for static data generation for\n//pre-rendering process\n//it will run for every request\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: Dummy_data,\n//     },\n//   };\n// }\n//it will fetch data during build time\n//and re validate the page after some time\n\n\nexport async function getStaticProps() {\n  //from API or file system\n  const client = await MongoClient.connect(\"mongodb+srv://Sagar_1997:sagar123@cluster0.rblqo.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n  const db = client.db(); //collection is just like table and document is like single row\n\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray(); //it will return all the documents from collection\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meet => ({\n        title: meet.title,\n        address: meet.address,\n        image: meet.image,\n        id: meet._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default Homepage;","map":{"version":3,"sources":["D:/fullstack/Front-end/ReactPractice/nextjsBigProject/pages/index.js"],"names":["Head","MeetupList","MongoClient","Fragment","Homepage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meet","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAAuC;;AACvC,SAASC,QAAT,QAAyB,OAAzB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,0GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CALqC,CAMrC;;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB,CARqC,CAQqB;;AAC1DN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,IAAD,KAAW;AAC9BC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADkB;AAE9BC,QAAAA,OAAO,EAAEF,IAAI,CAACE,OAFgB;AAG9BC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAHkB;AAI9BC,QAAAA,EAAE,EAAEJ,IAAI,CAACK,GAAL,CAASC,QAAT;AAJ0B,OAAX,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AACD,eAAepB,QAAf","sourcesContent":["import Head from \"next/head\";\r\n//this is use for add element in head tag\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\"; // if we use import which we use in getstaticprops or path or serversideprops then it will not the part for client side bundle\r\nimport { Fragment } from \"react\";\r\n// const Dummy_data = [\r\n//   {\r\n//     id: \"m1\",\r\n//     title: \"A First Meetup\",\r\n//     image: \"https://cdn.britannica.com/93/94493-050-35524FED/Toronto.jpg\",\r\n//     address: \"Some address 5, 12345 smart city\",\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     title: \"A Second Meetup\",\r\n//     image: \"https://cdn.britannica.com/93/94493-050-35524FED/Toronto.jpg\",\r\n//     address: \"Some address 10, 12345 smart city\",\r\n//   },\r\n// ];\r\nconst Homepage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>MeetUps</title>\r\n        <meta name=\"description\" content=\"List of meetups\" />\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n};\r\n//we will use this function only with pages and it used for static data generation for\r\n//pre-rendering process\r\n//it will run for every request\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n//   return {\r\n//     props: {\r\n//       meetups: Dummy_data,\r\n//     },\r\n//   };\r\n// }\r\n//it will fetch data during build time\r\n//and re validate the page after some time\r\nexport async function getStaticProps() {\r\n  //from API or file system\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Sagar_1997:sagar123@cluster0.rblqo.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  //collection is just like table and document is like single row\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray(); //it will return all the documents from collection\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meet) => ({\r\n        title: meet.title,\r\n        address: meet.address,\r\n        image: meet.image,\r\n        id: meet._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\nexport default Homepage;\r\n"]},"metadata":{},"sourceType":"module"}