{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/fullstack/Front-end/ReactPractice/nextjsBigProject/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/fullstack/Front-end/ReactPractice/nextjsBigProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\fullstack\\\\Front-end\\\\ReactPractice\\\\nextjsBigProject\\\\pages\\\\new-meetup\\\\index.js\",\n    _this = this;\n\nimport NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\n\nvar NewMeetUp = function NewMeetUp() {\n  var NewForm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(meetupData) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(meetupData);\n              _context.next = 3;\n              return fetch(\"/api/new-meetup\", {\n                method: \"POST\",\n                body: JSON.stringify(meetupData),\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Accept: \"application/json\"\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              data = response.json();\n              console.log(data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function NewForm(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: NewForm\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = NewMeetUp;\nexport default NewMeetUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetUp\");","map":{"version":3,"sources":["D:/fullstack/Front-end/ReactPractice/nextjsBigProject/pages/new-meetup/index.js"],"names":["NewMeetupForm","NewMeetUp","NewForm","meetupData","console","log","fetch","method","body","JSON","stringify","headers","Accept","response","data","json"],"mappings":";;;;;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,OAAO;AAAA,wEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AADc;AAAA,qBAESG,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,UAAf,CAFwC;AAG9CQ,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEPC,kBAAAA,MAAM,EAAE;AAFD;AAHqC,eAApB,CAFd;;AAAA;AAERC,cAAAA,QAFQ;AAURC,cAAAA,IAVQ,GAUDD,QAAQ,CAACE,IAAT,EAVC;AAWdX,cAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPZ,OAAO;AAAA;AAAA;AAAA,KAAb;;AAaA,sBAAO,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAfD;;KAAMD,S;AAgBN,eAAeA,SAAf","sourcesContent":["import NewMeetupForm from \"../../components/meetups/NewMeetupForm\";\r\nconst NewMeetUp = () => {\r\n  const NewForm = async (meetupData) => {\r\n    console.log(meetupData);\r\n    const response = await fetch(\"/api/new-meetup\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(meetupData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const data = response.json();\r\n    console.log(data);\r\n  };\r\n  return <NewMeetupForm onAddMeetup={NewForm} />;\r\n};\r\nexport default NewMeetUp;\r\n"]},"metadata":{},"sourceType":"module"}